Unidade 8- Projeto de banco de dados: boas práticas e normalização   navathe 15 
 
  Projeto conceitual: primeiro levantamento do banco de dados , esta mais preocupado em resolver o problema do suario. Esta mais proximo do usuario. Modelo entidade relacionamento. nao se leva em contao gbd o dbm
  Projeto Lógico: Ja se pensa o geenciador de banco de dados a ser aplicado, DB2 , MySQL, de redes, etc. Lembrar do algoritmo de mapeamento 
    utilizar o bom senso (essa aula é sobr isso)
 
  Como avaliar se o agrupamento de atributos em um esquema é melhor do que outro?
    Utilizar as boas praticas  para medir a qualidade do software 
    Deve-se empregar de um modo formal de analise (Normalização)!!!
      Analise de Redundância (quanto mais redundancia pior)
        Traz problemas de storage e controle (consistencia dos dados)
        mas a redundancia as vezes é bom por questão de desempenho
        Dependencia funcional 
  
  Boa praticas- Diretriz 1
    Semântica clara dos atributos
    toda vez que se cosntruir um modelo logico , e na construção de cada relação , tem que ter facil significado para o usuario 
    as coisas simples em geral funcionam melhor. simples nao e mal feito
    Projete uma relacao que seja facio deser entendida, uma relaçao que nao mistrue dados entre objetos 
    uma relacao que nao traga ambguidade 
      aparece dados misturados entre tabelas
      dados crepetidos criam anomalias
    NAO COMBINARÁS ATRIBUTOS DE  TABELAS  DISTINTAS
  
 Impacto da violação da primeira diretriz 
  QUEIMARÁS NO INFERNO DO SUPORTE-- ZUERA
  Redundancia de informaçao ----- deve-se evitar a redundancia descontrolada
  Anomalia de inserção (insert)
   na hora de inserir os dados de uma nova tupla , pode gerar uma inconsistencia de dados
  Anomalia de exclusão
   problemas gerados por se tirar dados da tabela 
   pode delatar um departamento por exeplo 
  Anomalia de modficação
   ao se modificr uma linha , diversas outras ha a possiblidade de se dever alterar diversas outrar 
   
 Boas praticas- diretriz 2 
  Consequencia das anomalias 
  projete as relações de forma que não haja anomalias
  Se houver anomalias de tratar na aplicação 
  NÃO GERARÁS ANOMALIAS DE ATUALIZAÇÃO 
 
 Boas praticas - diretriz 3
  EVITARÁS OS VALORES NULOS
  pode dar problema de count e de processamaento 
 
 Tuplas falsas 
  Se tivermos tabelas mau projetadas,pode dar bosta na hora do join 
  exemplo :
   pensa em uma tabela mauformulada. a partir dela voce deriva outras duas tabelas. ao dar join natural nas duas tabelas filhas para tentar gerar a tabela original gerará tuplas a mais, ou tuplas falsas, que nao representam a realidade. ver pagina 345

 Boas praticas - diretriz 4 
  EVITARÁS AS REDUNDANCIAS PARA NAO GERAR TUPLAS FALSAS
  
 Dependencia funcional 
  Relacionamento entre atributos , ou seja, um atributo da tabela depdende de outro atributo da tabela. Há uma dependecia semantica entre atributos
 Um atributo determina outro 
  Um cpf determina um nome. o nome depende do CPF
  se duas tuplas com o primeiro atributo, o determinante por dizer, forem iguais , essas mesmas tuplas serao iguais para o atributo dependente
Tomar cuidado com o lado dominante , para evitar que haja redundancia 
Um atributo pode determinar mais de um atributo
A dependencia funcional da dicas de redundancia 
Um conjunto de atributos pode determinar um unico atributo 
As dependencias funcionais dependem das REGRAS DE NEGOCIO, e nao dependem do estado do banco de dados
A partir do estado do banco de dados consegue se perceber quais estados NAO SAO dependetes funcionais.
Mas a partir do estado do banco de dados nao da para se determinar qume e dependente funcional de quem.
Se ha dependencia funcional entre atributos que nao sao chaves, isso gerará redundancia 
 exx: Cidade estado
