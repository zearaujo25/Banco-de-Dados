Unidade 10 - Estrutura de indexação em banco de dados pt1
  Indexação - Tem haver com ídices. Categorização em índices 
  Open
    Macro instrução 
      conjunto de instruções do sistema operacional em que disponibiliza o arquivo para o programa

  Ìndice
    Arquivos auxiliares que servem para mapear e acelerar o acesso de conteúdo de uma maneira mais rapida e eficiente. Fornecem o CAMINHO DE ACESSO, ou ACCESS PATH através de campos cheves, ou outros tipos de informação . Não alteram o conteúdo dos dados!!!!
    São baseadas em determinadas informações , que podem ser chaves ou outros campos . 
    Em um arquivo de banco de dados , pode haver apenas um indice? 
      NÃO!!! PODE HAVER MAIS INDICES!!!!
    Campo de indexação 
      Informação o qual o indice se baseia para acessar o dado
    O que o indice retorna ? 
      O endereço no disco do bloco (lembrar que um bloco é um conjunto de registro. isso acontece qpor causa de questões de desempenho. trabalhar com blocos é mais eficiente). 
    
    Em geral é um arquivo pequeno.
    Pode haver indices de indices 
    Qual a estrutura do indice? 
      é consituidos de registros tambem 
      etrutura chave valor, onde o valor é o ponteiro, o endereço do valor 
    Lembrar que gasta processamento para ler. Mas como e pequeno, issopode se tornar imperceptivel 
    
  **********************PEDIR PARA A BRUNA AS ANOTAÇÕES**********************
  indice primario 
    complexidade?
    pesquisa binaria? 
    estrutura ?
    Um para cada bloco de meoria (o primeiro registro mapeado pela sua chave primaira )
    
  
  Ao se inserir ou retirar dados, deve-se manter o indice atualizado 
  Existem mecanismos para se tornar a pesquisa do indice melhor ainda 
  Indice secundario 
    é um indíce que utilzia chaves candidatas(valores unicos) ao inves de primarias 
    Não necesariamente esta ordenada.
    Deverá haver mais pointers por conta disso, haverá um pointer para cada registro
    O indice esta ordenado pela chave candidata. então a ao se realizar a pesquisa e usado a pesquisa binaria em cima do indice. Lembara que o enderço apontado e o do bloco, bnao do registro 
  Indice Secundario em campos nao chave 
    fudeu por que agora osvalores podem estar duplicados 
    torna os indices nao esparsos ou densos 
  Indices multinivel 
    Indices que fazem referencia a outro indice , que faz referencia a outro indices...... ate chegar no dado 
    Quebra um indice muito grande em varios menores, para tornar a busca um pouco mais rapido 
    Desvantagem: complexidade do sistema 
    Na pratica nao se usa diversos indices , e sim usa-se o conceito de arvore BTREE
    
  Arvore
    Conjunbto de nós que são organizados hierarquicamente, onde um desses nós é o pai de todos (raíz). Cada nó só pode ter 1 pai.
    Folhas: Nós sem filhos 
    nós intermediario: nos sem filhos 
    Arestas: Ligação entre nos
    Caminho : Caminho percorrido para chegar de um no a outro. Quantidade de arestas
    Profundidade: Tamanho do caminho da raiz ate uma folha
    Altura : Tamanho do caminho de um no ate seu descendente mais profundo 
      Se uma arvore é balanceda, nos possuem mais ou menos a mesma altura 
    Travessia de arvore 
      caminhar por todos os nos da arvore. Percorrer  por todos os nos da arvore
      
      Pre ordem 
        Começa pelos ancestrais 
        Pai , depois filhos 
      Pos ordem
        coemça pelos descendentes 
        Passa por todos os filhos antes dos pais 
      In order 
        Filho a esquerda, pai , filhoa  direita 
    BTREE
      estrutura de indice onde se tem os blocos oganizados em uma estrutura hierearquica , usa-se uma arvore balanceada e preve blocos livres , e dentro dos blocos preve registros livres. usa-se esses espaços para facilitar na hora de inserir novos dados
**********PARTE 2**********
Arvore binária 
  Arvore que só permite ter dois filhos no maximo 
  Arvore propria 
    No que tem 0 ou 2 filhos 
  Arvore impropria 
    Tem no com apenas um filho
  Numero maximo de nos 
    N<=2^(h+1) - 1 , onde h é a altura
  Travessia inorder 
    visita o filho a esquerda, depois pai depis direita
Por que arvore binaria é usada em bacno de dados? 
  Se a arvore estiver bem estruturada, a informção será buscada de maneira  muito rapida 
  Usada como arvore de pesquisa(chamada tambe de  ordenada ou search tree )
  A arvore e construido com uma certa regra 
    A chave não é colocada em qualque lugar, e smi em uma posição conveniente na arvore 
    Todos os valores a esquerda da arvore sao menores que os nos a direita. O que esta a esquerda de um determinado no deve ser menor que o proprio no. da mesma maneira tudo que esta a direita do no , deve ser maior que o proprio no 
    ISSO PERMITE UMA PESQUISA BINARIA . SE DESCARTA TODO PEDAÇO DE ARVORE.
  A arvore deve estar balanceada para compensar(PODE SER UM PROBLEMA) 
    balanceada é quando os nós a direita e a esquerda tem a mesma altura,. se isso nao acontecer  ,a arvore se torna uma lista, e a pesquisa acaba se tornando sequencial 
  Ao se retirar um no, deve-se ter cuidado ao remanjear a arvore 
    se o no tem dois filhos 
      o descendente mais esquerda do filho a direita toma o lugar 
Arvore AVL 
  Arvore de busca binaria que se preocupa com o balanciamento 
  Na hora de editar a arore, o que o algoritmo busca de fazer de um jeito que a deixa mais balanceada possivel , deixando uma diferença entre a ALTURA de nos de mesmo nivel de apenas uma unidade
  Para gfrandes volumes de dados , a arvore binaria pode se tornar muita profunda, o que pode prejudicar a busca. O que é feito apra trabalhar com isso é usar a arvore enaria 
  PARA ARVORES BINARIAS !!!!!!!!!!!!
Arvore enaria 
  Uma árvore n-ária de pesquisa de ordem p é uma árvore tal que cada nó contém no máximo
p-1 valores de pesquisa e p ponteiros na ordem:P1, K1, P2, K2, . . . , Pq-1, K q-1, Pq, onde q <= p.
   Traduzindo, muda-se a estrutura do nó .  Cada nó tem mais ponteiros, mais filhos. Cada no tem varios ponteiros chave. Ponteiro1 chave1 , ponteiro2 cahve2.. ate o fim. Se trabalha com conjunto no racicinii
  Exemplo : Arvore ternaria . 3 ponteiros e 2 chaves.    Ponteiro1-----Valor1------Ponteiro2----Valor2---Ponteiro3 
    onde valor1<valor2
    Ponteiro 1: aponta para Valorees menores que o valor 1
     Ponteiro 2:aponta para Valorees entre o valor 1 e o valor 2 
     Ponteiro 3 :aponta para Valorees maiores que o valor 2
     Lembrar que há o ponteiro para os dados!!!!!!!!!!!!!!
    Tudo isso e para diminuir a profundidade da arvore . Arvores de menor profundidade tem uma performance melhor 
    Usada apenas em bancos de dados 
    Deve se preocupar tambem com o balanceamento da arvore (PROBLEMA)
    Para lidar com com esse problema , usa-se a arvore BTREE 
      É uma arvore enaria de pesquisa com preocupação de balanceamneto dela. Extensão da AVL 
